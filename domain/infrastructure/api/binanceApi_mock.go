// Code generated by MockGen. DO NOT EDIT.
// Source: ./api/binanceApi.go

// Package api is a generated GoMock package.
package api

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBinanceApi is a mock of BinanceApi interface.
type MockBinanceApi struct {
	ctrl     *gomock.Controller
	recorder *MockBinanceApiMockRecorder
}

// MockBinanceApiMockRecorder is the mock recorder for MockBinanceApi.
type MockBinanceApiMockRecorder struct {
	mock *MockBinanceApi
}

// NewMockBinanceApi creates a new mock instance.
func NewMockBinanceApi(ctrl *gomock.Controller) *MockBinanceApi {
	mock := &MockBinanceApi{ctrl: ctrl}
	mock.recorder = &MockBinanceApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBinanceApi) EXPECT() *MockBinanceApiMockRecorder {
	return m.recorder
}

// GetExchangeInfo mocks base method.
func (m *MockBinanceApi) GetExchangeInfo(baseAsset string) (*GetExchangeInfoResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExchangeInfo", baseAsset)
	ret0, _ := ret[0].(*GetExchangeInfoResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExchangeInfo indicates an expected call of GetExchangeInfo.
func (mr *MockBinanceApiMockRecorder) GetExchangeInfo(baseAsset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExchangeInfo", reflect.TypeOf((*MockBinanceApi)(nil).GetExchangeInfo), baseAsset)
}
